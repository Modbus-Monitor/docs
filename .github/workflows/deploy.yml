name: Build & Deploy Docs

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * *"   # Nightly rebuild at 3 AM UTC

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # ────────────────────────────────
      # 1️⃣ Install dependencies
      # ────────────────────────────────
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install \
            mkdocs \
            mkdocs-material \
            mkdocs-include-markdown-plugin \
            mkdocs-awesome-pages-plugin \
            mkdocs-autorefs \
            mkdocs-redirects

      # ────────────────────────────────
      # 2️⃣ Install pandoc + curl
      # ────────────────────────────────
      - name: Install pandoc and curl
        run: sudo apt-get update && sudo apt-get install -y pandoc curl

      # ────────────────────────────────
      # 3️⃣ Import & sanitize WordPress Help pages
      # ────────────────────────────────
      - name: Import WordPress Help pages
        run: |
          mkdir -p docs/docs/imported
          declare -A pages=(
            ["xpf-help"]="https://quantumbitsolutions.com/xpf-help/"
            ["advanced-help"]="https://quantumbitsolutions.com/guide/"
            ["mapper-help"]="https://quantumbitsolutions.com/sniff-help/"
            ["android-help"]="https://quantumbitsolutions.com/mmhelp/"
          )

          for name in "${!pages[@]}"; do
            echo "Importing ${name}..."
            curl -fsSL "${pages[$name]}" -o "docs/docs/imported/${name}.html" || { echo "Skipping ${name} (not found)"; continue; }
            pandoc -f html -t gfm "docs/docs/imported/${name}.html" -o "docs/docs/imported/${name}.md"

            # 🔧 Fix absolute paths & remove tracking pixels
            sed -i \
              -e 's#src="/#src="https://quantumbitsolutions.com/#g' \
              -e 's#href="/#href="https://quantumbitsolutions.com/#g' \
              -e 's#\!\[\](//bat\.bing\.com[^)]*)##g' \
              "docs/docs/imported/${name}.md"

            # 🧹 Remove inline scripts or noscript blocks
            sed -i '/<script/,/<\/script>/d' "docs/docs/imported/${name}.md"
            sed -i '/<noscript/,/<\/noscript>/d' "docs/docs/imported/${name}.md"
          done

      # ────────────────────────────────
      # 4️⃣ Build the MkDocs site
      # ────────────────────────────────
      - name: Build MkDocs site
        run: mkdocs build

      # ────────────────────────────────
      # 4️⃣b Generate PDFs for each imported help page
      # ────────────────────────────────
      - name: Generate PDFs for Imported Help pages
        run: |
          sudo apt-get install -y wkhtmltopdf
          mkdir -p site/pdfs
          declare -a pages=("xpf-help" "advanced-help" "mapper-help" "android-help")

          for page in "${pages[@]}"; do
            HTML_PATH="site/imported/${page}/index.html"
            PDF_PATH="site/pdfs/${page}.pdf"
            if [ -f "$HTML_PATH" ]; then
              echo "Generating PDF for ${page}..."
              wkhtmltopdf --enable-local-file-access --quiet "$HTML_PATH" "$PDF_PATH"
            else
              echo "⚠️  Skipping ${page} (missing HTML)"
            fi
          done

          echo "✅ PDF export complete"

      # ────────────────────────────────
      # 5️⃣ Upload for GitHub Pages
      # ────────────────────────────────
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  # ────────────────────────────────
  # 6️⃣ Deploy to GitHub Pages
  # ────────────────────────────────
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
